{"ast":null,"code":"var _jsxFileName = \"/Users/5-starman/Development/code/phase-3/Phase-3-project-frontend/src/components/Location.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import { NavLink } from 'react-router-dom';\nimport Review from './Review';\nimport { Card, Image, Icon } from 'semantic-ui-react';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Location(_ref) {\n  _s();\n  let {\n    id,\n    inhabitants,\n    terrain,\n    name,\n    reviews,\n    img_url,\n    average_rating\n  } = _ref;\n  const {\n    locationId\n  } = useParams(locationId);\n  const mappedReviews = reviews === null || reviews === void 0 ? void 0 : reviews.map(review => /*#__PURE__*/_jsxDEV(Review, {\n    ...review\n  }, review.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 50\n  }, this));\n  useEffect(() => {\n    fetch(\"http://localhost:9292/location\").then(resp => resp.json()).then(setReviews);\n  }, []);\n  // debugger\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"locationCard\"\n    // href= {`/locations/${id}`}\n    ,\n    header: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/locations/${id}`,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this),\n    meta: inhabitants,\n    description: terrain\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(Location, \"5wx4vslhHV8/42BUMNbloObSBLs=\", false, function () {\n  return [useParams];\n});\n_c = Location;\nexport default Location;\nvar _c;\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"names":["React","useState","useEffect","Review","Card","Image","Icon","Link","useParams","Location","id","inhabitants","terrain","name","reviews","img_url","average_rating","locationId","mappedReviews","map","review","fetch","then","resp","json","setReviews"],"sources":["/Users/5-starman/Development/code/phase-3/Phase-3-project-frontend/src/components/Location.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\n// import { NavLink } from 'react-router-dom';\nimport Review from './Review';\nimport { Card, Image, Icon } from 'semantic-ui-react';\nimport { Link, useParams } from 'react-router-dom';\n\nfunction Location({id, inhabitants, terrain, name, reviews, img_url, average_rating}){\n    const {locationId} = useParams(locationId)\n\n    const mappedReviews = reviews?.map(review => <Review key={review.id} {...review}/>)\n   \n    useEffect(() => {\n        fetch(\"http://localhost:9292/location\")\n        .then(resp => resp.json())\n        .then(setReviews)\n      }, [])\n// debugger\n\n    return (\n        <Card className='locationCard'\n    // href= {`/locations/${id}`}\n    header={<Link to = {`/locations/${id}`}>{name}</Link>}\n    meta={inhabitants}\n    description={terrain}\n  />\n    );\n}\n\nexport default Location;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD;AACA,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,IAAI,EAAEC,KAAK,EAAEC,IAAI,QAAQ,mBAAmB;AACrD,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAAC;AAEnD,SAASC,QAAQ,OAAoE;EAAA;EAAA,IAAnE;IAACC,EAAE;IAAEC,WAAW;IAAEC,OAAO;IAAEC,IAAI;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAc,CAAC;EAChF,MAAM;IAACC;EAAU,CAAC,GAAGT,SAAS,CAACS,UAAU,CAAC;EAE1C,MAAMC,aAAa,GAAGJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEK,GAAG,CAACC,MAAM,iBAAI,QAAC,MAAM;IAAA,GAAqBA;EAAM,GAArBA,MAAM,CAACV,EAAE;IAAA;IAAA;IAAA;EAAA,QAAe,CAAC;EAEnFR,SAAS,CAAC,MAAM;IACZmB,KAAK,CAAC,gCAAgC,CAAC,CACtCC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAACG,UAAU,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EACZ;;EAEI,oBACI,QAAC,IAAI;IAAC,SAAS,EAAC;IACpB;IAAA;IACA,MAAM,eAAE,QAAC,IAAI;MAAC,EAAE,EAAK,cAAaf,EAAG,EAAE;MAAA,UAAEG;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS;IACtD,IAAI,EAAEF,WAAY;IAClB,WAAW,EAAEC;EAAQ;IAAA;IAAA;IAAA;EAAA,QACrB;AAEJ;AAAC,GApBQH,QAAQ;EAAA,QACQD,SAAS;AAAA;AAAA,KADzBC,QAAQ;AAsBjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}