{"ast":null,"code":"var _jsxFileName = \"/Users/5-starman/Development/code/phase-3/Phase-3-project-frontend/src/components/Location.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import { NavLink } from 'react-router-dom';\nimport Review from './Review';\nimport { Card, Image, Icon } from 'semantic-ui-react';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Location(_ref) {\n  _s();\n  let {\n    id,\n    inhabitants,\n    terrain,\n    name,\n    reviews,\n    img_url,\n    charac\n  } = _ref;\n  const {\n    locationId\n  } = useParams();\n  const locationObj = useLocation();\n  const [location, setLocation] = useState(null);\n  const mappedReviews = reviews === null || reviews === void 0 ? void 0 : reviews.map(review => /*#__PURE__*/_jsxDEV(Review, {\n    ...review\n  }, review.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 50\n  }, this));\n\n  // useEffect(() => {\n  //     if (!id) {\n  //         fetch(`http://localhost:9292/locations/${locationId}`)\n  //         .then(resp => {\n  //             if(resp.ok){\n  //                 resp.json()\n  //                 .then(setLocation)  \n  //             } else {\n  //                 resp.json()\n  //                 .then(msg => alert(msg))\n  //             }\n  //         })\n  //         .then(setLocation)\n  //     }\n  //   }, [locationId, id])\n  // debugger\n  //   const finalLocation = location ? location : {id, inhabitants, terrain, name, reviews, img_url, average_rating}\n  //   if (!finalLocation) return <div>loading...</div>\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: mappedReviews\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this)\n  //        <>{locationObj.pathname === \"/home-page\" ? <Card className='locationCard'\n  //     // href= {`/locations/${id}`}\n  //     header={<Link to = {`/locations/${id}`}>{finalLocation.name}</Link>}\n  //     meta={finalLocation.inhabitants}\n  //     description={finalLocation.terrain}\n  //   /> : <Card className='locationCard'\n  //   // href= {`/locations/${id}`}\n  //   header={name}\n  //   meta={finalLocation.inhabitants}\n  //   description={finalLocation.terrain}\n  //     />} \n  //     </>\n  ;\n}\n_s(Location, \"CNEgqjt1FMx6/EdfOEw3fcXl5Lg=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = Location;\nexport default Location;\nvar _c;\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"names":["React","useState","useEffect","Review","Card","Image","Icon","Link","useParams","useLocation","Location","id","inhabitants","terrain","name","reviews","img_url","charac","locationId","locationObj","location","setLocation","mappedReviews","map","review"],"sources":["/Users/5-starman/Development/code/phase-3/Phase-3-project-frontend/src/components/Location.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\n// import { NavLink } from 'react-router-dom';\nimport Review from './Review';\nimport { Card, Image, Icon } from 'semantic-ui-react';\nimport { Link, useParams, useLocation } from 'react-router-dom';\n\nfunction Location({id, inhabitants, terrain, name, reviews, img_url, charac}){\n    const {locationId} = useParams()\n    const locationObj = useLocation()\n    const [location, setLocation] = useState(null)\n\n    const mappedReviews = reviews?.map(review => <Review key={review.id} {...review}/>)\n   \n    // useEffect(() => {\n    //     if (!id) {\n    //         fetch(`http://localhost:9292/locations/${locationId}`)\n    //         .then(resp => {\n    //             if(resp.ok){\n    //                 resp.json()\n    //                 .then(setLocation)  \n    //             } else {\n    //                 resp.json()\n    //                 .then(msg => alert(msg))\n    //             }\n    //         })\n    //         .then(setLocation)\n    //     }\n    //   }, [locationId, id])\n// debugger\n    //   const finalLocation = location ? location : {id, inhabitants, terrain, name, reviews, img_url, average_rating}\n    //   if (!finalLocation) return <div>loading...</div>\n    return (\n        <div>\n            {mappedReviews}\n\n        </div>\n//        <>{locationObj.pathname === \"/home-page\" ? <Card className='locationCard'\n//     // href= {`/locations/${id}`}\n//     header={<Link to = {`/locations/${id}`}>{finalLocation.name}</Link>}\n//     meta={finalLocation.inhabitants}\n//     description={finalLocation.terrain}\n//   /> : <Card className='locationCard'\n//   // href= {`/locations/${id}`}\n//   header={name}\n//   meta={finalLocation.inhabitants}\n//   description={finalLocation.terrain}\n//     />} \n//     </>\n    \n    )\n}\n\nexport default Location;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD;AACA,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,IAAI,EAAEC,KAAK,EAAEC,IAAI,QAAQ,mBAAmB;AACrD,SAASC,IAAI,EAAEC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAAC;AAEhE,SAASC,QAAQ,OAA4D;EAAA;EAAA,IAA3D;IAACC,EAAE;IAAEC,WAAW;IAAEC,OAAO;IAAEC,IAAI;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAM,CAAC;EACxE,MAAM;IAACC;EAAU,CAAC,GAAGV,SAAS,EAAE;EAChC,MAAMW,WAAW,GAAGV,WAAW,EAAE;EACjC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMqB,aAAa,GAAGP,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEQ,GAAG,CAACC,MAAM,iBAAI,QAAC,MAAM;IAAA,GAAqBA;EAAM,GAArBA,MAAM,CAACb,EAAE;IAAA;IAAA;IAAA;EAAA,QAAe,CAAC;;EAEnF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACJ;EACI;EACA;EACA,oBACI;IAAA,UACKW;EAAa;IAAA;IAAA;IAAA;EAAA;EAG1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAGA;AAAC,GA5CQZ,QAAQ;EAAA,QACQF,SAAS,EACVC,WAAW;AAAA;AAAA,KAF1BC,QAAQ;AA8CjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}