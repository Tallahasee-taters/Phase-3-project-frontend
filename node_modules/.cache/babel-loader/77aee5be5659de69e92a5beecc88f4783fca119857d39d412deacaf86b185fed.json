{"ast":null,"code":"var _jsxFileName = \"/Users/5-starman/Development/code/phase-3/Phase-3-project-frontend/src/components/Location.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import { NavLink } from 'react-router-dom';\nimport Review from './Review';\nimport { Card, Image, Icon } from 'semantic-ui-react';\nimport { Link, useParams, useLocation, Redirect } from 'react-router-dom';\nimport Character from './Character';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Location(_ref) {\n  _s();\n  let {\n    id,\n    inhabitants,\n    terrain,\n    name,\n    reviews,\n    img_url,\n    characters\n  } = _ref;\n  const {\n    locationId\n  } = useParams();\n  const locationObj = useLocation();\n  const [location, setLocation] = useState(null);\n  const mappedReviews = reviews.map(review => {\n    debugger;\n    // return <Review  key={review.id} {...review}/>\n  });\n\n  const mappedCharacters = characters.map(character => {\n    return /*#__PURE__*/_jsxDEV(Character, {\n      character: character,\n      ...character\n    }, character.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }, this);\n  });\n  const handleClick = () => {\n    /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `/locations/${id}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }, this);\n  };\n\n  // useEffect(() => {\n  //     if (!id) {\n  //         fetch(`http://localhost:9292/locations/${locationId}`)\n  //         .then(resp => {\n  //             if(resp.ok){\n  //                 resp.json()\n  //                 .then(setLocation)  \n  //             } else {\n  //                 resp.json()\n  //                 .then(msg => alert(msg))\n  //             }\n  //         })\n  //         .then(setLocation)\n  //     }\n  //   }, [locationId, id])\n  // debugger\n  //   const finalLocation = location ? location : {id, inhabitants, terrain, name, reviews, img_url, average_rating}\n  //   if (!finalLocation) return <div>loading...</div>\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => handleClick(),\n    children: /*#__PURE__*/_jsxDEV(Card.Group, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n            children: terrain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), mappedCharacters]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          extra: true,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"star\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this)\n  //        <>{locationObj.pathname === \"/home-page\" ? <Card className='locationCard'\n  //     // href= {`/locations/${id}`}\n  //     header={<Link to = {`/locations/${id}`}>{finalLocation.name}</Link>}\n  //     meta={finalLocation.inhabitants}\n  //     description={finalLocation.terrain}\n  //   /> : <Card className='locationCard'\n  //   // href= {`/locations/${id}`}\n  //   header={name}\n  //   meta={finalLocation.inhabitants}\n  //   description={finalLocation.terrain}\n  //     />}\n  //     </>\n  ;\n}\n_s(Location, \"CNEgqjt1FMx6/EdfOEw3fcXl5Lg=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = Location;\nexport default Location;\nvar _c;\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"names":["React","useState","useEffect","Review","Card","Image","Icon","Link","useParams","useLocation","Redirect","Character","Location","id","inhabitants","terrain","name","reviews","img_url","characters","locationId","locationObj","location","setLocation","mappedReviews","map","review","mappedCharacters","character","handleClick"],"sources":["/Users/5-starman/Development/code/phase-3/Phase-3-project-frontend/src/components/Location.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\n// import { NavLink } from 'react-router-dom';\nimport Review from './Review';\nimport { Card, Image, Icon } from 'semantic-ui-react';\nimport { Link, useParams, useLocation, Redirect} from 'react-router-dom';\nimport Character from './Character';\n\nfunction Location({id, inhabitants, terrain, name, reviews, img_url, characters}){\n    const {locationId} = useParams()\n    const locationObj = useLocation()\n    const [location, setLocation] = useState(null)\n\n    const mappedReviews = reviews.map((review) => {\n        debugger\n        // return <Review  key={review.id} {...review}/>\n    })\n\n    const mappedCharacters = characters.map((character) => \n     {return <Character character={character} key={character.id} {...character}/>})\n\n    const handleClick = () => {\n         <Redirect to={`/locations/${id}`} />\n    }\n   \n    // useEffect(() => {\n    //     if (!id) {\n    //         fetch(`http://localhost:9292/locations/${locationId}`)\n    //         .then(resp => {\n    //             if(resp.ok){\n    //                 resp.json()\n    //                 .then(setLocation)  \n    //             } else {\n    //                 resp.json()\n    //                 .then(msg => alert(msg))\n    //             }\n    //         })\n    //         .then(setLocation)\n    //     }\n    //   }, [locationId, id])\n// debugger\n    //   const finalLocation = location ? location : {id, inhabitants, terrain, name, reviews, img_url, average_rating}\n    //   if (!finalLocation) return <div>loading...</div>\n    return (\n      <div onClick={() => handleClick()}>\n        <Card.Group>\n          <Card>\n            <Card.Content>\n              <Card.Header  >{name}</Card.Header>\n              <Card.Description>{terrain}</Card.Description>\n              {mappedCharacters}\n              {/* {mappedReviews} */}\n            </Card.Content>\n            <Card.Content extra>\n              <a>\n                <Icon name=\"star\" />\n              </a>\n            </Card.Content>\n          </Card>\n        </Card.Group>\n      </div>\n      //        <>{locationObj.pathname === \"/home-page\" ? <Card className='locationCard'\n      //     // href= {`/locations/${id}`}\n      //     header={<Link to = {`/locations/${id}`}>{finalLocation.name}</Link>}\n      //     meta={finalLocation.inhabitants}\n      //     description={finalLocation.terrain}\n      //   /> : <Card className='locationCard'\n      //   // href= {`/locations/${id}`}\n      //   header={name}\n      //   meta={finalLocation.inhabitants}\n      //   description={finalLocation.terrain}\n      //     />}\n      //     </>\n    );\n}\n\nexport default Location;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD;AACA,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,IAAI,EAAEC,KAAK,EAAEC,IAAI,QAAQ,mBAAmB;AACrD,SAASC,IAAI,EAAEC,SAAS,EAAEC,WAAW,EAAEC,QAAQ,QAAO,kBAAkB;AACxE,OAAOC,SAAS,MAAM,aAAa;AAAC;AAEpC,SAASC,QAAQ,OAAgE;EAAA;EAAA,IAA/D;IAACC,EAAE;IAAEC,WAAW;IAAEC,OAAO;IAAEC,IAAI;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAU,CAAC;EAC5E,MAAM;IAACC;EAAU,CAAC,GAAGZ,SAAS,EAAE;EAChC,MAAMa,WAAW,GAAGZ,WAAW,EAAE;EACjC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMuB,aAAa,GAAGP,OAAO,CAACQ,GAAG,CAAEC,MAAM,IAAK;IAC1C;IACA;EACJ,CAAC,CAAC;;EAEF,MAAMC,gBAAgB,GAAGR,UAAU,CAACM,GAAG,CAAEG,SAAS,IACjD;IAAC,oBAAO,QAAC,SAAS;MAAC,SAAS,EAAEA,SAAU;MAAA,GAAwBA;IAAS,GAA3BA,SAAS,CAACf,EAAE;MAAA;MAAA;MAAA;IAAA,QAAkB;EAAA,CAAC,CAAC;EAE/E,MAAMgB,WAAW,GAAG,MAAM;IACrB,qBAAC,QAAQ;MAAC,EAAE,EAAG,cAAahB,EAAG;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EACzC,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACJ;EACI;EACA;EACA,oBACE;IAAK,OAAO,EAAE,MAAMgB,WAAW,EAAG;IAAA,uBAChC,QAAC,IAAI,CAAC,KAAK;MAAA,uBACT,QAAC,IAAI;QAAA,wBACH,QAAC,IAAI,CAAC,OAAO;UAAA,wBACX,QAAC,IAAI,CAAC,MAAM;YAAA,UAAIb;UAAI;YAAA;YAAA;YAAA;UAAA,QAAe,eACnC,QAAC,IAAI,CAAC,WAAW;YAAA,UAAED;UAAO;YAAA;YAAA;YAAA;UAAA,QAAoB,EAC7CY,gBAAgB;QAAA;UAAA;UAAA;UAAA;QAAA,QAEJ,eACf,QAAC,IAAI,CAAC,OAAO;UAAC,KAAK;UAAA,uBACjB;YAAA,uBACE,QAAC,IAAI;cAAC,IAAI,EAAC;YAAM;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA;QAClB;UAAA;UAAA;UAAA;QAAA,QACS;MAAA;QAAA;QAAA;QAAA;MAAA;IACV;MAAA;MAAA;MAAA;IAAA;EACI;IAAA;IAAA;IAAA;EAAA;EAEf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEN;AAAC,GAlEQf,QAAQ;EAAA,QACQJ,SAAS,EACVC,WAAW;AAAA;AAAA,KAF1BG,QAAQ;AAoEjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}